version: '3.8'

networks:
  web:
    external: true

volumes:
  owncloud-data:
  owncloud-config:

services:
  ocis:
    image: owncloud/ocis:2.0.0
    container_name: ocis
    networks:
      web:
    entrypoint:
      - /bin/sh
    # run ocis init to initialize a configuration file with random secrets
    # it will fail on subsequent runs, because the config file already exists
    # therefore we ignore the error and then start the ocis server
    command: ["-c", "ocis init || true; ocis server"]
    environment:
      OCIS_URL: https://data.picco.li
      OCIS_LOG_LEVEL: info
      OCIS_LOG_COLOR: true
      PROXY_TLS: false # do not use SSL between Traefik and oCIS
      # INSECURE: needed if oCIS / Traefik is using self generated certificates
      OCIS_INSECURE: false
      # basic auth (not recommended, but needed for eg. WebDav clients that do not support OpenID Connect)
      PROXY_ENABLE_BASIC_AUTH: false
      # demo users
      IDM_CREATE_DEMO_USERS: false
      # email server (in this case inbucket acts as mail catcher)
      NOTIFICATIONS_SMTP_HOST: mail.privateemail.com
      NOTIFICATIONS_SMTP_PORT: 587
      NOTIFICATIONS_SMTP_SENDER: oCIS notifications <notifications@data.picco.li>
      NOTIFICATIONS_SMTP_USERNAME: lorenzo@picco.li
      NOTIFICATIONS_SMTP_INSECURE: false # the mail catcher uses self signed certificates
    volumes:
      - owncloud-config:/etc/ocis
      - owncloud-data:/var/lib/ocis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ocis.rule=Host(`data.picco.li`)"
      - "traefik.http.routers.ocis.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.ocis.service=ocis"
      - "traefik.http.services.ocis.loadbalancer.server.port=9200"
    logging:
      driver: "local"
    env_file:
      - .env
    restart: always